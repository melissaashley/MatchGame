"use strict";var cards=["bomb","diamond","leaf","paper","bolt","rocket","send","ghost"],gridBoard=cards.concat(cards),game=document.getElementById("game"),resetIt=document.getElementById("reset"),winner=document.getElementById("winner"),moves=document.getElementById("moves"),allCards=document.getElementsByClassName("tile"),allFlipped=document.getElementsByClassName("flipped"),flippedCards=[],count=0,startGame=function(){emptyCardsArray(),game.innerHTML="",gridBoard.sort(function(){return.5-Math.random()}),generateCardBoard(),count=0,moves.innerHTML="Moves: "+count,winner.innerHTML="",winner.classList.remove("won")};resetIt.addEventListener("click",startGame);var emptyCardsArray=function(){flippedCards=[]},flipCard=function(){this.classList.contains("flipped")||this.classList.add("selected")},checkMatch=function e(){flippedCards.push(this),1===flippedCards.length&&flippedCards[0].removeEventListener("click",e),2===flippedCards.length&&(flippedCards[0].getAttribute("data-type")===flippedCards[1].getAttribute("data-type")?cardsMatch():(cardsDontMatch(),flippedCards[0].addEventListener("click",e)))},cardsMatch=function(){flippedCards[0].classList.add("flipped"),flippedCards[1].classList.add("flipped"),flippedCards[0].removeEventListener("click",checkMatch),flippedCards[1].removeEventListener("click",checkMatch),addMove(),removeSelectedAll(),emptyCardsArray(),wonGame()},cardsDontMatch=function(){addMove(),setTimeout(function(){flippedCards[0].classList.remove("selected"),flippedCards[1].classList.remove("selected"),removeSelectedAll(),emptyCardsArray()},600)},removeSelectedAll=function(){var e=!0,t=!1,a=void 0;try{for(var r,d=allCards[Symbol.iterator]();!(e=(r=d.next()).done);e=!0){r.value.classList.remove("selected")}}catch(e){t=!0,a=e}finally{try{e||null==d.return||d.return()}finally{if(t)throw a}}},wonGame=function(){16===allFlipped.length&&(winner.classList.add("won"),winner.innerHTML="You won the game!",window.scrollTo(0,0))},addMove=function(){count+=1,moves.innerHTML="Moves: "+count},generateCardBoard=function(){var e=!0,t=!1,a=void 0;try{for(var r,d=gridBoard[Symbol.iterator]();!(e=(r=d.next()).done);e=!0){var n=r.value,s=document.createElement("div");s.classList.add("tile",n),s.dataset.type=n,game.appendChild(s),s.addEventListener("click",flipCard),s.addEventListener("click",checkMatch)}}catch(e){t=!0,a=e}finally{try{e||null==d.return||d.return()}finally{if(t)throw a}}};startGame();
//# sourceMappingURL=bundle.min.js.map