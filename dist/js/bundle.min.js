"use strict";var cards=[{id:"1",name:"bomb"},{id:"2",name:"diamond"},{id:"3",name:"leaf"},{id:"4",name:"paper"},{id:"5",name:"bolt"},{id:"6",name:"rocket"},{id:"7",name:"send"},{id:"8",name:"ghost"}],game=document.getElementById("game"),resetIt=document.getElementById("reset"),winner=document.getElementById("winner"),moves=document.getElementById("moves"),flippedCards=[],gridBoard=cards.concat(cards),allCards=document.getElementsByClassName("tile"),allFlipped=document.getElementsByClassName("flipped"),count=0,startGame=function(){console.log("the game has started"),emptyCardsArray(),count=0,moves.innerHTML="Moves: "+count};resetIt.addEventListener("click",startGame);var emptyCardsArray=function(){flippedCards=[]},flipCard=function(){this.classList.contains("flipped")||this.classList.add("selected")},checkMatch=function(){flippedCards.push(this),2===flippedCards.length&&(flippedCards[0].getAttribute("data-type")===flippedCards[1].getAttribute("data-type")?cardsMatch():cardsDontMatch())},cardsMatch=function(){flippedCards[0].classList.add("flipped"),flippedCards[1].classList.add("flipped"),addMove(),removeSelectedAll(),emptyCardsArray()},cardsDontMatch=function(){addMove(),setTimeout(function(){flippedCards[0].classList.remove("selected"),flippedCards[1].classList.remove("selected"),removeSelectedAll(),emptyCardsArray()},600)},removeSelectedAll=function(){var e=!0,t=!1,r=void 0;try{for(var a,d=allCards[Symbol.iterator]();!(e=(a=d.next()).done);e=!0){a.value.classList.remove("selected")}}catch(e){t=!0,r=e}finally{try{e||null==d.return||d.return()}finally{if(t)throw r}}},wonGame=function(){16===allFlipped.length&&winner.classList.add("won")},addMove=function(){count+=1,moves.innerHTML="Moves: "+count},_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_iterator2=gridBoard[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var eachCard=_step2.value,card=document.createElement("div");card.classList.add("tile",eachCard.name),card.dataset.type=eachCard.id,game.appendChild(card),card.addEventListener("click",flipCard),card.addEventListener("click",checkMatch),card.addEventListener("click",wonGame)}}catch(e){_didIteratorError2=!0,_iteratorError2=e}finally{try{_iteratorNormalCompletion2||null==_iterator2.return||_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}
//# sourceMappingURL=bundle.min.js.map