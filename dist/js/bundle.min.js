"use strict";var cards=[{id:"1",name:"frog"},{id:"2",name:"bird"},{id:"3",name:"fish"},{id:"4",name:"goose"},{id:"5",name:"moose"},{id:"6",name:"parrot"},{id:"7",name:"lion"},{id:"8",name:"tiger"}],game=document.getElementById("game"),gridBoard=cards.concat(cards);gridBoard.sort(function(){return.5-Math.random()});var flippedCards=[],emptyCards=function(){flippedCards=[]},cardNotMatched=function(){console.log("rude, no match"),emptyCards()},cardMatched=function(){console.log("it matches"),emptyCards()},checkMatch=function(r){flippedCards.push(r.getAttribute("data-type"));var a=flippedCards.length;console.log(flippedCards),2===a&&(flippedCards[0]===flippedCards[1]?cardMatched():cardNotMatched())},flipCard=function(){var r=this;r.classList.contains("flipped")||(r.classList.add("flipped"),checkMatch(r))},_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=gridBoard[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var eachCard=_step.value,card=document.createElement("div"),icon=document.createElement("span");card.classList.add("tile"),icon.classList.add("icon"),card.dataset.type=eachCard.name,icon.innerHTML=eachCard.id,card.appendChild(icon),game.appendChild(card),card.addEventListener("click",flipCard)}}catch(r){_didIteratorError=!0,_iteratorError=r}finally{try{_iteratorNormalCompletion||null==_iterator.return||_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}
//# sourceMappingURL=bundle.min.js.map